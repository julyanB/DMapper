<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <RootNamespace>DMapper</RootNamespace>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <Title>DMapper</Title>
        <Authors>Julian B.</Authors>
        <Description>A lightweight .NET object mapping library for deep copying and attribute-based property mapping.</Description>
        <Copyright>Copyright © 2025 DMapper</Copyright>
        <PackageProjectUrl>https://github.com/julyan97/DMapper</PackageProjectUrl>
        <PackageLicenseExpression>MIT</PackageLicenseExpression>
        <RepositoryUrl>https://github.com/julyan97/DMapper</RepositoryUrl>
        <RepositoryType>git</RepositoryType>
        <PackageTags>object-mapper reflection mapping copy nested-objects</PackageTags>
        <PackageReleaseNotes>

			<PackageReleaseNotes>
				2.2.1 (v8):
				- Fixed cache key comparer: _mapCache / _convCache now use IEqualityComparer&lt;Type&gt; for correct type-based lookups.
				- Restored BuildSetter to support ConcurrentDictionary.GetOrAdd without breaking complex assignment paths. Setter delegates call proven v6 SetNestedValueDirect_V6 for arrays, collections, nullables, etc.
				- Integrated expression trees for compiled mapping plans, cutting per-map overhead by avoiding repeated reflection calls at runtime.
				- Adopted hybrid execution model: simple assignments use compiled delegates for speed, complex cases fall back to v6’s safe setter logic for correctness.
				- Updated all GetOrAdd calls to use lambda syntax to avoid CS1503 compiler errors with method groups and overloads.
			</PackageReleaseNotes>

		</PackageReleaseNotes>
        <TargetFrameworks>net9.0;netstandard2.1</TargetFrameworks>
        <LangVersion>latest</LangVersion>
        <Version>2.2.1</Version>
        <PackageIcon>D-Logo.png</PackageIcon>
        <PackageId>DSeries.DMapper.Core</PackageId>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.CSharp" Version="4.7.0" />
    </ItemGroup>

    <PropertyGroup>
        <PackageIcon>D-Logo.png</PackageIcon>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    </PropertyGroup>

    <ItemGroup>
        <None Include="D-Logo.png" Pack="true" PackagePath="." />
    </ItemGroup>
</Project>